!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o():"function"==typeof define&&define.amd?define(o):o()}(0,function(){"use strict";if("undefined"==typeof Chart)throw new Error("Shards Dashboard requires the Chart.js library in order to function properly.");window.ShardsDashboards=window.ShardsDashboards?window.ShardsDashboards:{},$.extend($.easing,{easeOutSine:function(t,o,e,i,n){return i*Math.sin(o/n*(Math.PI/2))+e}}),Chart.defaults.LineWithLine=Chart.defaults.line,Chart.controllers.LineWithLine=Chart.controllers.line.extend({draw:function(t){if(Chart.controllers.line.prototype.draw.call(this,t),this.chart.tooltip._active&&this.chart.tooltip._active.length){var o=this.chart.tooltip._active[0],e=this.chart.ctx,i=o.tooltipPosition().x,n=this.chart.scales["y-axis-0"].top,r=this.chart.scales["y-axis-0"].bottom;e.save(),e.beginPath(),e.moveTo(i,n),e.lineTo(i,r),e.lineWidth=.5,e.strokeStyle="#ddd",e.stroke(),e.restore()}}}),$(document).ready(function(){var t={duration:270,easing:"easeOutSine"};$(":not(.main-sidebar--icons-only) .dropdown").on("show.bs.dropdown",function(){$(this).find(".dropdown-menu").first().stop(!0,!0).slideDown(t)}),$(":not(.main-sidebar--icons-only) .dropdown").on("hide.bs.dropdown",function(){$(this).find(".dropdown-menu").first().stop(!0,!0).slideUp(t)}),$(".toggle-sidebar").click(function(t){$(".main-sidebar").toggleClass("open")})})});

$(function() {


    // This function gets cookie with a given name
    function getCookie(name) {
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    var csrftoken = getCookie('csrftoken');

    /*
    The functions below will create a header with csrftoken
    */

    function csrfSafeMethod(method) {
        // these HTTP methods do not require CSRF protection
        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
    }
    function sameOrigin(url) {
        // test that a given url is a same-origin URL
        // url could be relative or scheme relative or absolute
        var host = document.location.host; // host + port
        var protocol = document.location.protocol;
        var sr_origin = '//' + host;
        var origin = protocol + sr_origin;
        // Allow absolute or scheme relative URLs to same origin
        return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||
            (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||
            // or any other URL that isn't scheme relative or absolute i.e relative.
            !(/^(\/\/|http:|https:).*/.test(url));
    }

    $.ajaxSetup({
        beforeSend: function(xhr, settings) {
            if (!csrfSafeMethod(settings.type) && sameOrigin(settings.url)) {
                // Send the token to same-origin, relative URLs only.
                // Send the token only if the method warrants CSRF protection
                // Using the CSRFToken value acquired earlier
                xhr.setRequestHeader("X-CSRFToken", csrftoken);
            }
        }
    });

});

// Submit post on submit
$('#post-form').on('submit', function(event){
    event.preventDefault();
    console.log("form submitted!")  // sanity check
    analysis();
});

// AJAX for posting
function analysis() {
    console.log("create post is working!") // sanity check
    $.ajax({
        url : "/analysis.html", // the endpoint
        type : "POST", // http method
        data: $('#cfa-form').serialize(),
        // handle a successful response
        success : function(json) {

            console.log(json); // log the returned json to the console
            console.log("success"); // another sanity check
        },

        // handle a non-successful response
        error : function(xhr,errmsg,err) {
            $('#results').html("<div class='alert-box alert radius' data-alert>Oops! We have encountered an error: "+errmsg+
                " <a href='#' class='close'>&times;</a></div>"); // add the error to the dom
            console.log(xhr.status + ": " + xhr.responseText); // provide a bit more info about the error to the console
        }
    });
};
